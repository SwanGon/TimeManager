version: '3.8'

services:
  frontend:
    build: ./timemanager-webapp
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./timemanager-api
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=ecto://${{secrets.POSTGRES_USER}}:${{secrets.POSTGRES_PASSWORD}}@db/${{secrets.POSTGRES_DB}}
      - SECRET_KEY_BASE=${{secrets.SECRET_KEY_BASE}}
    network_mode: host
    depends_on:
      - db

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
