{
  "info": {
    "version": "1.0",
    "title": "Time Manager"
  },
  "host": "localhost:4000",
  "definitions": {
    "Clock": {
      "description": "Clock details",
      "example": {
        "status": "true",
        "time": "2024-12-30 15:46:33",
        "user": "User ID"
      },
      "properties": {
        "status": {
          "description": "Status",
          "type": "boolean"
        },
        "time": {
          "description": "Time",
          "type": "datetime"
        },
        "user": {
          "description": "User ID",
          "type": "integer"
        }
      },
      "title": "Clock",
      "type": "object"
    },
    "UpdateTeam": {
      "description": "Schema for updating a Team",
      "properties": {
        "manager_id": {
          "default": 2,
          "description": "manager_id",
          "example": 2,
          "type": "integer"
        }
      },
      "required": [
        "manager_id"
      ],
      "title": "Update Team",
      "type": "object"
    },
    "Team": {
      "description": "Team details",
      "example": {
        "manager_id": 1
      },
      "properties": {
        "manager_id": {
          "description": "manager ID",
          "type": "integer"
        }
      },
      "title": "Team",
      "type": "object"
    },
    "CreateTeam": {
      "description": "Schema for creating a Team",
      "properties": {
        "manager_id": {
          "default": 1,
          "description": "manager_id",
          "example": 1,
          "type": "integer"
        }
      },
      "required": [
        "manager_id"
      ],
      "title": "Create Team",
      "type": "object"
    },
    "UpdateUser": {
      "description": "Schema for updating a user",
      "properties": {
        "email": {
          "description": "Email address",
          "example": "updatedmail@testmail.com",
          "type": "string"
        },
        "role_id": {
          "default": 1,
          "description": "Role id",
          "example": 1,
          "type": "integer"
        },
        "username": {
          "description": "Username",
          "example": "UpdatedUser123",
          "type": "string"
        }
      },
      "required": [
        "role_id",
        "email",
        "username"
      ],
      "title": "Update User",
      "type": "object"
    },
    "User": {
      "description": "User details",
      "example": {
        "email": "mymail@testmail.com",
        "role_id": 1,
        "username": "JohnDoe123"
      },
      "properties": {
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "role_id": {
          "description": "Role ID",
          "type": "integer"
        },
        "username": {
          "description": "Username",
          "type": "string"
        }
      },
      "title": "User",
      "type": "object"
    },
    "CreateUser": {
      "description": "Schema for creating a user",
      "properties": {
        "email": {
          "description": "Email address",
          "example": "mymail@testmail.com",
          "type": "string"
        },
        "role_id": {
          "default": 1,
          "description": "Role id",
          "example": 1,
          "type": "integer"
        },
        "username": {
          "description": "Username",
          "example": "JohnDoe123",
          "type": "string"
        }
      },
      "required": [
        "role_id",
        "email",
        "username"
      ],
      "title": "Create User",
      "type": "object"
    },
    "UpdateWorkingtime": {
      "description": "Schema for updating a workingtime",
      "properties": {
        "working_end": {
          "description": "End",
          "example": "2024-12-30 17:46:33",
          "type": "datetime"
        },
        "working_start": {
          "description": "Start",
          "example": "2024-12-30 10:46:33",
          "type": "datetime"
        }
      },
      "required": [
        "working_end",
        "working_start"
      ],
      "title": "Update Workingtime",
      "type": "object"
    },
    "Workingtime": {
      "description": "Workingtime details",
      "example": {
        "user": "User ID",
        "working_end": "2024-12-30 15:46:33",
        "working_start": "2024-12-30 15:46:33"
      },
      "properties": {
        "user": {
          "description": "User ID",
          "type": "integer"
        },
        "working_end": {
          "description": "end",
          "type": "datetime"
        },
        "working_start": {
          "description": "Start",
          "type": "datetime"
        }
      },
      "title": "Workingtime",
      "type": "object"
    },
    "CreateWorkingtime": {
      "description": "Schema for creating a workingtime",
      "properties": {
        "working_end": {
          "description": "End",
          "example": "2024-12-30 16:46:33",
          "type": "datetime"
        },
        "working_start": {
          "description": "Start",
          "example": "2024-12-30 09:46:33",
          "type": "datetime"
        }
      },
      "required": [
        "working_end",
        "working_start"
      ],
      "title": "Create Workingtime",
      "type": "object"
    },
    "CreateClock": {
      "description": "Schema for creating a clock",
      "properties": {
        "status": {
          "description": "Status",
          "example": "true",
          "type": "boolean"
        },
        "time": {
          "description": "Time",
          "example": "2024-12-30 15:46:33",
          "type": "datetime"
        }
      },
      "required": [
        "time"
      ],
      "title": "Create Clock",
      "type": "object"
    }
  },
  "paths": {
    "/api/clocks/{user_id}": {
      "get": {
        "description": "List all clocks",
        "operationId": "TimemanagerWeb.ClockController.index",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "date",
            "in": "query",
            "name": "date",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Clocks"
        ]
      },
      "post": {
        "description": "Create clock",
        "operationId": "TimemanagerWeb.ClockController.create",
        "parameters": [
          {
            "description": "user ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "x-example": 1
          },
          {
            "description": "Clock creation params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateClock"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Clock"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Clocks"
        ]
      }
    },
    "/api/managers": {
      "get": {
        "description": "List all users with manager Role",
        "operationId": "TimemanagerWeb.UserController.managers",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/teams": {
      "get": {
        "description": "List all team",
        "operationId": "TimemanagerWeb.TeamController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Teams"
        ]
      },
      "post": {
        "description": "Create Team",
        "operationId": "TimemanagerWeb.TeamController.create",
        "parameters": [
          {
            "description": "Team creation params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTeam"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/teams/{id}": {
      "delete": {
        "description": "Delete a Team by ID",
        "operationId": "TimemanagerWeb.TeamController.delete",
        "parameters": [
          {
            "description": "Team ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete Team",
        "tags": [
          "Teams"
        ]
      },
      "get": {
        "description": "Get team by id",
        "operationId": "TimemanagerWeb.TeamController.show",
        "parameters": [
          {
            "description": "Team ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          },
          "404": {
            "description": "No Team found with this ID"
          }
        },
        "summary": "",
        "tags": [
          "Teams"
        ]
      },
      "put": {
        "description": "Update an existing team",
        "operationId": "TimemanagerWeb.TeamController.update",
        "parameters": [
          {
            "description": "Team ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 1
          },
          {
            "description": "Team update params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTeam"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Team updated",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/teamsmanager/{manager_id}": {
      "get": {
        "description": "get teams by manager's id",
        "operationId": "TimemanagerWeb.TeamController.manager",
        "parameters": [
          {
            "description": "manager ID",
            "in": "path",
            "name": "manager_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          },
          "404": {
            "description": "No Team found with this ID"
          }
        },
        "summary": "",
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/users": {
      "get": {
        "description": "List all users",
        "operationId": "TimemanagerWeb.UserController.index",
        "parameters": [
          {
            "description": "Email address of the user",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Username of the user",
            "in": "query",
            "name": "username",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Users"
        ]
      },
      "post": {
        "description": "Create user",
        "operationId": "TimemanagerWeb.UserController.create",
        "parameters": [
          {
            "description": "User creation params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "delete": {
        "description": "Delete a user by ID",
        "operationId": "TimemanagerWeb.UserController.delete",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete User",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "description": "Get user by id",
        "operationId": "TimemanagerWeb.UserController.show",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          },
          "404": {
            "description": "No user found with this ID"
          }
        },
        "summary": "",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "description": "Update an existing user",
        "operationId": "TimemanagerWeb.UserController.update",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 1
          },
          {
            "description": "User update params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/workingtimes/{id}": {
      "delete": {
        "description": "Delete a user by ID",
        "operationId": "TimemanagerWeb.WorkingTimeController.delete",
        "parameters": [
          {
            "description": "Working time ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete User",
        "tags": [
          "Workingtime"
        ]
      },
      "put": {
        "description": "Update an existing user",
        "operationId": "TimemanagerWeb.WorkingTimeController.update",
        "parameters": [
          {
            "description": "working time id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 1
          },
          {
            "description": "working time update params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateWorkingtime"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Working time updated",
            "schema": {
              "$ref": "#/definitions/Workingtime"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Workingtime"
        ]
      }
    },
    "/api/workingtimes/{user_id}": {
      "get": {
        "description": "List all working times of a user",
        "operationId": "TimemanagerWeb.WorkingTimeController.index",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "start date",
            "in": "query",
            "name": "working_start",
            "required": false,
            "type": "string"
          },
          {
            "description": "end date",
            "in": "query",
            "name": "working_end",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Workingtime"
        ]
      }
    },
    "/api/workingtimes/{user_id}/": {
      "get": {
        "description": "Get a working time by user by id",
        "operationId": "TimemanagerWeb.WorkingTimeController.show",
        "parameters": [
          {
            "description": "Working time ID",
            "in": "query",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Client Error"
          },
          "404": {
            "description": "No working time and/or user found with this IDs"
          }
        },
        "summary": "",
        "tags": [
          "Workingtime"
        ]
      },
      "post": {
        "description": "Create workingtime",
        "operationId": "TimemanagerWeb.WorkingTimeController.create",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer",
            "x-example": 1
          },
          {
            "description": "Workingtime creation params",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkingtime"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Workingtime"
            }
          },
          "400": {
            "description": "Client Error"
          }
        },
        "summary": "",
        "tags": [
          "Workingtime"
        ]
      }
    }
  },
  "swagger": "2.0"
}